"use strict";angular.module("owsWalletPlugin",["angularMoment","gettext","ionic","ngLodash","owsWalletPluginClient","owsWalletPlugin.api","owsWalletPlugin.controllers","owsWalletPlugin.services"]),angular.module("owsWalletPlugin.api",[]),angular.module("owsWalletPlugin.controllers",[]),angular.module("owsWalletPlugin.services",[]),angular.module("owsWalletPlugin").config(function($stateProvider){$stateProvider.state("start",{url:"/start",controller:"StartCtrl",templateUrl:"views/start/start.html"}).state("home",{url:"/home",controller:"HomeCtrl",templateUrl:"views/home/home.html"}).state("sign-in",{url:"/sign-in",controller:"SignInCtrl",templateUrl:"views/sign-in/sign-in.html"}).state("settings",{url:"/settings",controller:"SettingsCtrl",templateUrl:"views/settings/settings.html"}).state("buy",{url:"/buy/:amount/:currency",controller:"BuyCtrl",templateUrl:"views/buy/buy.html"}).state("sell",{url:"/sell/:amount/:currency",controller:"SellCtrl",templateUrl:"views/sell/sell.html"})}).run(function($rootScope,$state,$log,CoinbaseServlet,coinbaseService){owswallet.Plugin.openForBusiness(CoinbaseServlet.id,function(){coinbaseService.whenAvailable(function(coinbase){coinbase.account?$state.go("home"):$state.go("start")})}),$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){$log.debug("Applet route change start from:",fromState.name||"-"," to:",toState.name)})}),angular.module("owsWalletPlugin").run(["gettextCatalog",function(gettextCatalog){}]),angular.module("owsWalletPlugin.services").factory("coinbaseService",function($log,$timeout,lodash,gettextCatalog,popupService,Coinbase,Settings){function onCoinbaseConnect(err){if(err)return root.showError(err);Settings.get().then(function(settingsObj){root.settings=settingsObj,available()}).catch(function(err){return root.showError(err)})}function available(){isAvailable=!0,lodash.each(availableCallbacks,function(x){$timeout(function(){return x(root.coinbase)},1)}),availableCallbacks=[]}var root={},isAvailable=!1,availableCallbacks=[];return root.coinbase,root.currencyOrder=["BTC","BCH","ETH","LTC"],root.settings,root.whenAvailable=function(cb){return root.coinbase||(root.coinbase=new Coinbase("default",onCoinbaseConnect)),isAvailable?cb(root.coinbase):void availableCallbacks.push(cb)},root.showError=function(err){$log.error("Could not connect to Coinbase: "+err.message+", "+err.detail);var title=gettextCatalog.getString("Could not connect to Coinbase"),message=gettextCatalog.getString("An error occurred while trying to connect to Coinbase. Please try again.");return popupService.showAlert(title,message)},root}),angular.module("owsWalletPlugin.services").factory("utils",function(){var root={};return root.float=function(val){return val+="",parseFloat(val.replace(/,/g,""))},root}),angular.module("owsWalletPlugin.controllers").controller("BuyCtrl",function($scope,$log,$state,$timeout,$ionicHistory,$ionicScrollDelegate,$ionicConfig,lodash,coinbaseService,popupService,profileService,ongoingProcess,walletService,txFormatService,externalLinkService){var amount,currency,showErrorAndBack=function(err){$scope.sendStatus="",$log.error(err),err=err.errors?err.errors[0].message:err,popupService.showAlert("Error",err,function(){$ionicHistory.goBack()})},showError=function(err){$scope.sendStatus="",$log.error(err),err=err.errors?err.errors[0].message:err,popupService.showAlert("Error",err)},statusChangeHandler=function(processName,showName,isOn){$log.debug("statusChangeHandler: ",processName,showName,isOn),"buyingBitcoin"!=processName||isOn?showName&&($scope.sendStatus=showName):($scope.sendStatus="success",$timeout(function(){$scope.$digest()},100))},processPaymentInfo=function(){ongoingProcess.set("connectingCoinbase",!0),coinbaseService.init(function(err,res){if(err)return ongoingProcess.set("connectingCoinbase",!1),void showErrorAndBack(err);coinbaseService.buyPrice(coinbaseService.getAvailableCurrency(),function(err,b){$scope.buyPrice=b.data||null}),$scope.paymentMethods=[],$scope.selectedPaymentMethodId={value:null},coinbaseService.getPaymentMethods(function(err,p){if(err)return ongoingProcess.set("connectingCoinbase",!1),void showErrorAndBack(err);for(var hasPrimary,pm,i=0;i<p.data.length;i++)pm=p.data[i],pm.allow_buy&&$scope.paymentMethods.push(pm),pm.allow_buy&&pm.primary_buy&&(hasPrimary=!0,$scope.selectedPaymentMethodId.value=pm.id);if(lodash.isEmpty($scope.paymentMethods)){ongoingProcess.set("connectingCoinbase",!1);return void externalLinkService.open("https://support.coinbase.com/customer/portal/articles/1148716-payment-methods-for-us-customers",!0,null,"No payment method available to buy","More info","Go Back",function(){$ionicHistory.goBack(-2)})}hasPrimary||($scope.selectedPaymentMethodId.value=$scope.paymentMethods[0].id),$scope.buyRequest()})})};$scope.$on("$ionicView.beforeLeave",function(event,data){$ionicConfig.views.swipeBackEnabled(!0)}),$scope.$on("$ionicView.enter",function(event,data){$ionicConfig.views.swipeBackEnabled(!1)}),$scope.$on("$ionicView.beforeEnter",function(event,data){if($scope.isFiat="BTC"!=data.stateParams.currency,amount=data.stateParams.amount,currency=data.stateParams.currency,$scope.network=coinbaseService.getNetwork(),$scope.wallets=profileService.getWallets({onlyComplete:!0,network:$scope.network,coin:"btc"}),lodash.isEmpty($scope.wallets))return void showErrorAndBack("No wallets available");$scope.onWalletSelect($scope.wallets[0])}),$scope.buyRequest=function(){ongoingProcess.set("connectingCoinbase",!0),coinbaseService.init(function(err,res){if(err)return ongoingProcess.set("connectingCoinbase",!1),void showErrorAndBack(err);var accountId=res.accountId,dataSrc={amount:amount,currency:currency,payment_method:$scope.selectedPaymentMethodId.value,quote:!0};coinbaseService.buyRequest(accountId,dataSrc,function(err,data){if(ongoingProcess.set("connectingCoinbase",!1),err)return void showErrorAndBack(err);$scope.buyRequestInfo=data.data,$timeout(function(){$scope.$apply()},100)})})},$scope.buyConfirm=function(){var message="Buy bitcoin for "+$scope.amountUnitStr;popupService.showConfirm(null,message,"Confirm","Cancel",function(ok){ok&&(ongoingProcess.set("buyingBitcoin",!0,statusChangeHandler),coinbaseService.init(function(err,res){if(err)return ongoingProcess.set("buyingBitcoin",!1,statusChangeHandler),void showError(err);var accountId=res.accountId,dataSrc={amount:amount,currency:currency,payment_method:$scope.selectedPaymentMethodId.value,commit:!0};coinbaseService.buyRequest(accountId,dataSrc,function(err,b){if(err)return ongoingProcess.set("buyingBitcoin",!1,statusChangeHandler),void showError(err);var processBuyTx=function(tx){if(!tx)return ongoingProcess.set("buyingBitcoin",!1,statusChangeHandler),void showError("Transaction not found");coinbaseService.getTransaction(accountId,tx.id,function(err,updatedTx){if(err)return ongoingProcess.set("buyingBitcoin",!1,statusChangeHandler),void showError(err);walletService.getAddress($scope.wallet,!1,function(err,walletAddr){if(err)return ongoingProcess.set("buyingBitcoin",!1,statusChangeHandler),void showError(err);updatedTx.data.toAddr=walletAddr,updatedTx.data.status="pending",$log.debug("Saving transaction to process later..."),coinbaseService.savePendingTransaction(updatedTx.data,{},function(err){ongoingProcess.set("buyingBitcoin",!1,statusChangeHandler),err&&$log.debug(err)})})})},_processBuyOrder=function(){coinbaseService.getBuyOrder(accountId,b.data.id,function(err,buyResp){if(err)return ongoingProcess.set("buyingBitcoin",!1,statusChangeHandler),void showError(err);var tx=buyResp.data?buyResp.data.transaction:null;tx&&tx.id?processBuyTx(tx):$timeout(function(){_processBuyOrder()},5e3)})};$timeout(function(){var tx=b.data?b.data.transaction:null;tx&&tx.id?processBuyTx(tx):_processBuyOrder()},8e3)})}))})},$scope.showWalletSelector=function(){$scope.walletSelectorTitle="Receive in",$scope.showWallets=!0},$scope.onWalletSelect=function(wallet){$scope.wallet=wallet;var parsedAmount=txFormatService.parseAmount("btc",amount,currency);amount=(parsedAmount.amountSat/1e8).toFixed(8),currency="BTC",$scope.amountUnitStr=parsedAmount.amountUnitStr,ongoingProcess.set("calculatingFee",!0),coinbaseService.checkEnoughFundsForFee(amount,function(err){if(ongoingProcess.set("calculatingFee",!1),err)return void showErrorAndBack(err);processPaymentInfo()})},$scope.goBackHome=function(){$scope.sendStatus="",$ionicHistory.nextViewOptions({disableAnimate:!0,historyRoot:!0}),$ionicHistory.clearHistory(),$state.go("tabs.home").then(function(){$state.transitionTo("tabs.buyandsell.coinbase")})}}),angular.module("owsWalletPlugin.controllers").controller("HomeCtrl",function($scope,$timeout,$log,$ionicScrollDelegate,lodash,utils,coinbaseService,Constants){function init(){language=coinbaseService.settings.language||"en",$scope.period="day",$scope.amountGroupOpacity=1,$scope.titleOpacity=0,getAccountBalance(),updateData()}function getAccountBalance(){var decimals=Constants.currencyMap("USD","decimals"),symbol=Constants.currencyMap("USD","symbol");$scope.accountBalance=symbol+$scope.format(0,{decimals:decimals})}function updateData(){getData().then(function(data){$scope.currencies=data.currencies,$scope.$apply(),dataUpdater=$timeout(function(){updateData()},DATA_UPDATE_FREQUENCY)})}function getData(){return new Promise(function(resolve,reject){coinbase.spotPrice().then(function(spotPrice){spotPrice=lodash.pickBy(spotPrice,function(value,key){return void 0==value.error||($log.error("Could not spot price for "+key+": "+value.error),!1)});var sortOrder=["BTC","BCH","ETH","LTC"],currencies=lodash.map(Object.keys(spotPrice),function(k){var decimals=Constants.currencyMap(spotPrice[k].currency,"decimals");return spotPrice[k].pair=spotPrice[k].base+"-"+spotPrice[k].currency,spotPrice[k].amount=utils.float(spotPrice[k].amount),spotPrice[k].symbol=Constants.currencyMap(spotPrice[k].currency,"symbol"),spotPrice[k].decimals=decimals,spotPrice[k].sort=sortOrder.indexOf(spotPrice[k].base),spotPrice[k].sort=spotPrice[k].sort<0?99:spotPrice[k].sort,spotPrice[k]});return lodash.sortBy(currencies,function(c){return c.sort})}).then(function(currencies){var count=currencies.length;lodash.forEach(currencies,function(currency){coinbase.historicPrice(currency.pair,$scope.period).then(function(data){var periodPrice=utils.float(data.prices[data.prices.length-1].price);if(currency.amountChange=currency.amount-periodPrice,currency.percentChange=Math.abs(100*currency.amountChange/currency.amount),0==--count)return resolve({currencies:currencies})})})}).catch(function(error){$log.error("Could not get Coinbase data: "+error)})})}var language,coinbase,dataUpdater,DATA_UPDATE_FREQUENCY=3e4;$scope.$on("$ionicView.beforeEnter",function(event,data){coinbase=coinbaseService.coinbase,init()}),$scope.$on("$ionicView.beforeLeave",function(event){$timeout.cancel(dataUpdater)}),$scope.onScroll=function(){var position=$ionicScrollDelegate.$getByHandle("cards").getScrollPosition().top;$scope.headerTop=-1.5*position+"px",$scope.amountGroupOpacity=1-.01*position,$scope.titleOpacity=position<130?0:.2*(position-130),$scope.$apply()},$scope.format=function(num,currency){return Math.abs(num).toLocaleString(language,{minimumFractionDigits:currency.decimals,maximumFractionDigits:currency.decimals})}}),angular.module("owsWalletPlugin.controllers").controller("SellCtrl",function($scope,$log,$state,$timeout,$ionicHistory,$ionicScrollDelegate,$ionicConfig,lodash,coinbaseService,popupService,profileService,ongoingProcess,walletService,appConfigService,configService,txFormatService,externalLinkService){var amount,currency,showErrorAndBack=function(err){$scope.sendStatus="",$log.error(err),err=err.errors?err.errors[0].message:err,popupService.showAlert("Error",err,function(){$ionicHistory.goBack()})},showError=function(err){$scope.sendStatus="",$log.error(err),err=err.errors?err.errors[0].message:err,popupService.showAlert("Error",err)},publishAndSign=function(wallet,txp,onSendStatusChange,cb){if(!wallet.canSign()&&!wallet.isPrivKeyExternal()){var err="No signing proposal: No private key";return $log.info(err),cb(err)}walletService.publishAndSign(wallet,txp,function(err,txp){return err?cb(err):cb(null,txp)},onSendStatusChange)},processPaymentInfo=function(){ongoingProcess.set("connectingCoinbase",!0),coinbaseService.init(function(err,res){if(err)return ongoingProcess.set("connectingCoinbase",!1),void showErrorAndBack(coinbaseService.getErrorsAsString(err.errors));coinbaseService.sellPrice(coinbaseService.getAvailableCurrency(),function(err,s){$scope.sellPrice=s.data||null}),$scope.paymentMethods=[],$scope.selectedPaymentMethodId={value:null},coinbaseService.getPaymentMethods(function(err,p){if(err)return ongoingProcess.set("connectingCoinbase",!1),void showErrorAndBack(coinbaseService.getErrorsAsString(err.errors));for(var hasPrimary,pm,i=0;i<p.data.length;i++)pm=p.data[i],pm.allow_sell&&$scope.paymentMethods.push(pm),pm.allow_sell&&pm.primary_sell&&(hasPrimary=!0,$scope.selectedPaymentMethodId.value=pm.id);if(lodash.isEmpty($scope.paymentMethods)){ongoingProcess.set("connectingCoinbase",!1);return void externalLinkService.open("https://support.coinbase.com/customer/portal/articles/1148716-payment-methods-for-us-customers",!0,null,"No payment method available to sell","More info","Go Back",function(){$ionicHistory.goBack(-2)})}hasPrimary||($scope.selectedPaymentMethodId.value=$scope.paymentMethods[0].id),$scope.sellRequest()})})},checkTransaction=lodash.throttle(function(count,txp){$log.warn("Check if transaction has been received by Coinbase. Try "+count+"/5");var amountBTC=(1e-8*txp.amount).toFixed(8);coinbaseService.init(function(err,res){if(err)return $log.error(err),void checkTransaction(count,txp);var accountId=res.accountId,sellPrice=null;coinbaseService.sellPrice(coinbaseService.getAvailableCurrency(),function(err,sell){if(err)return $log.debug(coinbaseService.getErrorsAsString(err.errors)),void checkTransaction(count,txp);sellPrice=sell.data,coinbaseService.getTransactions(accountId,function(err,ctxs){if(err)return $log.debug(coinbaseService.getErrorsAsString(err.errors)),void checkTransaction(count,txp);for(var ctx,coinbaseTransactions=ctxs.data,txFound=!1,i=0;i<coinbaseTransactions.length;i++)if(ctx=coinbaseTransactions[i],"send"==ctx.type&&ctx.from&&ctx.amount.amount==amountBTC)return $log.warn("Transaction found!",ctx),txFound=!0,$log.debug("Saving transaction to process later..."),ctx.payment_method=$scope.selectedPaymentMethodId.value,ctx.status="pending",ctx.price_sensitivity=$scope.selectedPriceSensitivity.data,ctx.sell_price_amount=sellPrice?sellPrice.amount:"",ctx.sell_price_currency=sellPrice?sellPrice.currency:"USD",ctx.description=appConfigService.nameCase+" Wallet: "+$scope.wallet.name,void coinbaseService.savePendingTransaction(ctx,null,function(err){ongoingProcess.set("sellingBitcoin",!1,statusChangeHandler),err&&$log.debug(coinbaseService.getErrorsAsString(err.errors))});if(!txFound){if($log.warn("Transaction not found in Coinbase. Will try 5 times..."),!(count<5))return ongoingProcess.set("sellingBitcoin",!1,statusChangeHandler),void showError("No transaction found");checkTransaction(count+1,txp)}})})})},8e3,{leading:!0}),statusChangeHandler=function(processName,showName,isOn){$log.debug("statusChangeHandler: ",processName,showName,isOn),"sellingBitcoin"!=processName||isOn?showName&&($scope.sendStatus=showName):($scope.sendStatus="success",$timeout(function(){$scope.$digest()},100))};$scope.$on("$ionicView.beforeLeave",function(event,data){$ionicConfig.views.swipeBackEnabled(!0)}),$scope.$on("$ionicView.enter",function(event,data){$ionicConfig.views.swipeBackEnabled(!1)}),$scope.$on("$ionicView.beforeEnter",function(event,data){if($scope.isFiat="BTC"!=data.stateParams.currency,amount=data.stateParams.amount,currency=data.stateParams.currency,$scope.priceSensitivity=coinbaseService.priceSensitivity,$scope.selectedPriceSensitivity={data:coinbaseService.selectedPriceSensitivity},$scope.network=coinbaseService.getNetwork(),$scope.wallets=profileService.getWallets({m:1,onlyComplete:!0,network:$scope.network,hasFunds:!0,coin:"btc"}),lodash.isEmpty($scope.wallets))return void showErrorAndBack("No wallet available to operate with Coinbase");$scope.onWalletSelect($scope.wallets[0])}),$scope.sellRequest=function(){ongoingProcess.set("connectingCoinbase",!0),coinbaseService.init(function(err,res){if(err)return ongoingProcess.set("connectingCoinbase",!1),void showErrorAndBack(coinbaseService.getErrorsAsString(err.errors));var accountId=res.accountId,dataSrc={amount:amount,currency:currency,payment_method:$scope.selectedPaymentMethodId.value,quote:!0};coinbaseService.sellRequest(accountId,dataSrc,function(err,data){if(ongoingProcess.set("connectingCoinbase",!1),err)return void showErrorAndBack(coinbaseService.getErrorsAsString(err.errors));$scope.sellRequestInfo=data.data,$timeout(function(){$scope.$apply()},100)})})},$scope.sellConfirm=function(){var config=configService.getSync(),configWallet=config.wallet,walletSettings=configWallet.settings,message="Selling bitcoin for "+amount+" "+currency;popupService.showConfirm(null,message,"Confirm","Cancel",function(ok){ok&&(ongoingProcess.set("sellingBitcoin",!0,statusChangeHandler),coinbaseService.init(function(err,res){if(err)return ongoingProcess.set("sellingBitcoin",!1,statusChangeHandler),void showError(coinbaseService.getErrorsAsString(err.errors));var accountId=res.accountId,dataSrc={name:"Received from "+appConfigService.nameCase};coinbaseService.createAddress(accountId,dataSrc,function(err,data){if(err)return ongoingProcess.set("sellingBitcoin",!1,statusChangeHandler),void showError(coinbaseService.getErrorsAsString(err.errors));var outputs=[],toAddress=data.data.address,amountSat=parseInt((1e8*$scope.sellRequestInfo.amount.amount).toFixed(0)),comment="Sell bitcoin (Coinbase)";outputs.push({toAddress:toAddress,amount:amountSat,message:comment});var txp={toAddress:toAddress,amount:amountSat,outputs:outputs,message:comment,payProUrl:null,excludeUnconfirmedUtxos:!configWallet.spendUnconfirmed,feeLevel:walletSettings.feeLevel||"normal"};walletService.createTx($scope.wallet,txp,function(err,ctxp){if(err)return ongoingProcess.set("sellingBitcoin",!1,statusChangeHandler),void showError(err);$log.debug("Transaction created."),publishAndSign($scope.wallet,ctxp,function(){},function(err,txSent){if(err)return ongoingProcess.set("sellingBitcoin",!1,statusChangeHandler),void showError(err);$log.debug("Transaction broadcasted. Wait for Coinbase confirmation..."),checkTransaction(1,txSent)})})})}))})},$scope.showWalletSelector=function(){$scope.walletSelectorTitle="Sell From",$scope.showWallets=!0},$scope.onWalletSelect=function(wallet){$scope.wallet=wallet;var parsedAmount=txFormatService.parseAmount("btc",amount,currency);amount=parsedAmount.amount,currency=parsedAmount.currency,$scope.amountUnitStr=parsedAmount.amountUnitStr,processPaymentInfo()},$scope.goBackHome=function(){$scope.sendStatus="",$ionicHistory.nextViewOptions({disableAnimate:!0,historyRoot:!0}),$ionicHistory.clearHistory(),$state.go("tabs.home").then(function(){$state.transitionTo("tabs.buyandsell.coinbase")})}}),angular.module("owsWalletPlugin.controllers").controller("SettingsCtrl",function($scope,$timeout,$log,$state,$ionicHistory,lodash,ongoingProcess,popupService,coinbaseService){$scope.revokeToken=function(){popupService.showConfirm("Coinbase","Are you sure you would like to log out of your Coinbase account?",null,null,function(res){res&&coinbaseService.logout(function(){$ionicHistory.clearHistory(),$timeout(function(){$state.go("tabs.home")},100)})})},$scope.$on("$ionicView.enter",function(event,data){ongoingProcess.set("connectingCoinbase",!0),coinbaseService.init(function(err,data){if(err||lodash.isEmpty(data)){if(ongoingProcess.set("connectingCoinbase",!1),err){$log.error(err);var errorId=err.errors?err.errors[0].id:null;err=err.errors?err.errors[0].message:err,popupService.showAlert("Error connecting to Coinbase",err,function(){"revoked_token"==errorId&&(coinbaseService.logout(function(){}),$ionicHistory.goBack())})}}else{var accountId=data.accountId;coinbaseService.getAccount(accountId,function(err,account){ongoingProcess.set("connectingCoinbase",!1),$scope.coinbaseAccount=account.data}),coinbaseService.getCurrentUser(function(err,user){$scope.coinbaseUser=user.data})}})})}),angular.module("owsWalletPlugin.controllers").controller("SignInCtrl",function($scope,$log,$timeout,$state,$ionicModal,$ionicHistory,gettextCatalog,popupService,externalLinkService,coinbaseService){function openAuthenticateWindow(){function code(str){var code=null,idxCode=str.indexOf("code=");return idxCode>=0&&(code=str.substring(idxCode+5),code.indexOf("&")>=0&&(code=code.substring(0,code.indexOf("&")))),code}if(isNodeWebKit){require("nw.gui").Window.open(coinbase.urls.oauthCodeUrl,{focus:!0,position:"center"},function(authenticateWindow){authenticateWindow.on("loaded",function(){var oauthCode=code(authenticateWindow.window.location.search);oauthCode&&(authenticateWindow.window.close(),coinbase.connect(oauthCode,function(err){err&&coinbaseService.showError(err),closeModal(),$timeout(function(){$state.go("home")},200)}))})})}else externalLinkService.open(coinbase.urls.oauthCodeUrl)}function openModal(){$ionicModal.fromTemplateUrl("views/sign-in/form/form.html",{scope:$scope}).then(function(modal){$scope.signInModal=modal,$scope.signInModal.show()}),$scope.cancel=function(){$scope.signInModal.remove(),$timeout(function(){$ionicHistory.goBack()},200)},$scope.submit=function(){coinbase.connect($scope.formData.oauthCode,function(err){if(err)return $log.error("Could not connect to Coinbase: "+err.message+", "+err.detail),showError();$scope.signInModal.remove(),$timeout(function(){$state.go("home")},200)})}}function closeModal(){$scope.signInModal.remove()}function showError(){var title=gettextCatalog.getString("Could not connect to Coinbase"),message=gettextCatalog.getString("Please try again.");popupService.showAlert(title,message,function(){$timeout(function(){$ionicHistory.goBack()},200)})}var coinbase,isNodeWebKit=owswallet.Plugin.isNodeWebKit();$scope.formData={oauthCode:""},$scope.$on("$ionicView.enter",function(event,data){coinbase=coinbaseService.coinbase,openModal(),openAuthenticateWindow()})}),angular.module("owsWalletPlugin.controllers").controller("StartCtrl",function($scope,$timeout,$log,$state,lodash,gettextCatalog,popupService,externalLinkService,utils,coinbaseService,Constants){function format(num,currency){return Math.abs(num).toLocaleString(language,{minimumFractionDigits:currency.decimals,maximumFractionDigits:currency.decimals})}function updateFeatureCurrency(){getData().then(function(data){if(data.currencies){$scope.currencies=data.currencies;var currency=$scope.currencies[$scope.selectedCurrency];if($scope.featureLeft={value:format(currency.amount,currency),symbol:currency.symbol,label:currency.label+" price"},data.periodPrice){var periodPrice=data.periodPrice;"all"==$scope.timeFrames[$scope.selectedTimeFrame].period&&(periodPrice=0);var amountChange=utils.float(currency.amount)-utils.float(periodPrice);$scope.featureRight={direction:amountChange>=0?0:-1,value:format(Math.abs(amountChange)+"",{decimals:2}),symbol:currency.symbol,label:$scope.timeFrames[$scope.selectedTimeFrame].label},$scope.$apply(),dataUpdater=$timeout(function(){updateFeatureCurrency()},DATA_UPDATE_FREQUENCY)}}})}function getData(){return coinbase.spotPrice().then(function(spotPrice){spotPrice=lodash.pickBy(spotPrice,function(value,key){return void 0==value.error||($log.error("Could not spot price for "+key+": "+value.error),!1)});var currencies=lodash.map(Object.keys(spotPrice),function(k){return spotPrice[k].pair=spotPrice[k].base+"-"+spotPrice[k].currency,spotPrice[k].amount=utils.float(spotPrice[k].amount),spotPrice[k].symbol=Constants.currencyMap(spotPrice[k].currency,"symbol"),spotPrice[k].decimals=Constants.currencyMap(spotPrice[k].currency,"decimals"),spotPrice[k].sort=coinbaseService.currencyOrder.indexOf(spotPrice[k].base),spotPrice[k].sort=spotPrice[k].sort<0?99:spotPrice[k].sort,spotPrice[k]});return lodash.sortBy(currencies,function(c){return c.sort})}).then(function(currencies){var currencyPair=currencies[$scope.selectedCurrency].pair,period=$scope.timeFrames[$scope.selectedTimeFrame].period;return coinbase.historicPrice(currencyPair,period).then(function(data){return{currencies:currencies,periodPrice:data.prices[data.prices.length-1].price}})}).catch(function(error){$log.error("Could not get Coinbase data: "+error)})}var dataUpdater,coinbase=coinbaseService.coinbase,language=coinbaseService.settings.language||"en",DATA_UPDATE_FREQUENCY=3e4;$scope.timeFrames=[{button:"1H",label:gettextCatalog.getString("this hour"),period:"hour"},{button:"1D",label:gettextCatalog.getString("today"),period:"day"},{button:"1W",label:gettextCatalog.getString("this week"),period:"week"},{button:"1M",label:gettextCatalog.getString("this month"),period:"month"},{button:"1Y",label:gettextCatalog.getString("this year"),period:"year"},{button:"ALL",period:"all",label:gettextCatalog.getString("all time")}],$scope.$on("$ionicView.beforeEnter",function(event,data){$scope.selectedCurrency=0,$scope.selectedTimeFrame=lodash.findIndex($scope.timeFrames,["period","year"]),updateFeatureCurrency()}),$scope.$on("$ionicView.beforeLeave",function(event){$timeout.cancel(dataUpdater)}),$scope.signIn=function(){$state.go("sign-in")},$scope.openSignupWindow=function(){var url=coinbase.urls.signupUrl;externalLinkService.open(url,!0,"Sign Up for Coinbase","This will open Coinbase.com, where you can create an account.","Go to Coinbase","Back")},$scope.selectCurrency=function(index){$scope.selectedCurrency=index,updateFeatureCurrency()},$scope.selectTimeFrame=function(index){$scope.selectedTimeFrame=index,updateFeatureCurrency()}});